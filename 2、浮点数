1、对于某些数，浮点数不能准确地表示

实际上，有限长度的任何进制数都不能表示所有数
因此浮点数实在近似地表示一个数

顶点表示法：（和通常的十进制没有什么区别，只是权重变了）
d1d2d3....dn.(dn+1)(dn+2)....(dn+m)

2、IEEE浮点表示

V=（-1）^s*M*2^E

符号s：决定是正数还是负数
尾数M：是一个二进制小数，它的范围是：1~2-e  或者是  0~1-e
阶码E：对浮点数进行加权，这个权重是2的E次幂（E也可以是负数）

编码方式：
一个单独的符号位s                         编码符号位s（一般是1位）
k位的阶码字段exp=(ek-1)(ek-2)....e1e0     编码阶码E（8位  或者  11位）
n位小数字段frac=(fn-1)...f1f0             编码尾数M（23位  或者  52位）
根据阶码的值可以分为以下四种情况：

（1）规格化的值
最普遍的情况，exp的位模式既不是全0也不是全1：
阶码字段被解释为：以偏置形式表示的有符号整数
E=e-Bias           e:无符号数，(ek-1)(ek-2)...e1e0          Bias=2^(k-1)-1
对于单精度：-126~127
对双精度：-1022~1023

小数字段frac被描述为小数值f，这里：0 <= f < 1
其二进制表示为：0.(fn-1)(fn-2)...f1f0        二进制的小数点在最高位的左边
尾数M=1+f， 这种方式也叫做隐藏以1开头的表示

（2）非格式化的值
当阶码域全为0时：
阶码值E=1-Bias            Bias=2^(k-1)-1

小数字段frac被描述为小数值f，这里：0 <= f < 1
其二进制表示为：0.(fn-1)(fn-2)...f1f0        二进制的小数点在最高位的左边
尾数值M=f

非规格化的用途：表示0   或者    表示非常接近0的数

（3）特殊值（正无穷  与   负无穷    与   NAN）
阶码值全为1，小数域全为0：无穷
正溢出则用正无穷表示

阶码值全为1，小数域不为0：NAN


3、舍入
四种舍入方法，默认：最接近匹配

例如：

方式            1.40         1.60       1.50        2.50         -1.50
向偶数舍入        1            2          2           2             -2
向0舍入           1            1          1           2             -1
向下舍入          1            1          1           2             -2
向上舍入          2            2          2           3             -1

向0舍入：选择值越靠近0的那个数，正数向下，负数向上


4、浮点运算
使用了Round函数，这是对实际运算的精确结果进行舍入后的结果
